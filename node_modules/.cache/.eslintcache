[{"/home/gaurav/web_dev/TodoList/src/index.js":"1","/home/gaurav/web_dev/TodoList/src/App.js":"2","/home/gaurav/web_dev/TodoList/src/componant/TodoListItem.js":"3","/home/gaurav/web_dev/TodoList/src/componant/Header.js":"4","/home/gaurav/web_dev/TodoList/src/componant/Form.js":"5"},{"size":398,"mtime":1675539493548,"results":"6","hashOfConfig":"7"},{"size":929,"mtime":1675539414331,"results":"8","hashOfConfig":"7"},{"size":1695,"mtime":1675539765240,"results":"9","hashOfConfig":"7"},{"size":158,"mtime":1675539677343,"results":"10","hashOfConfig":"7"},{"size":997,"mtime":1675539658519,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"apnx2j",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gaurav/web_dev/TodoList/src/index.js",[],[],"/home/gaurav/web_dev/TodoList/src/App.js",[],[],"/home/gaurav/web_dev/TodoList/src/componant/TodoListItem.js",["28"],[],"import React from 'react'\n\nconst TodoListItem = ({ todos, setTodos,setEditTodo }) => {\n    const handleEdit = ({id})=>{\n        const findTodo = todos.find((todo) => todo.id === id);\n        setEditTodo(findTodo);\n    }\n\n    const handleComplete = (todo)=>{\n        setTodos(\n            todo.map((item) =>{\n                if(item.id === todo.id){\n                    return {...item,completed: !item.completed}\n                }\n            })\n        )\n    }\n\n    const handleDelete = ({id})=>{\n        setTodos(todos.filter((todo) => todo.id !== id));\n    }\n    return (\n        <div>\n            {todos.map((todo) => (\n                <li className=\"list-item\" key={todo.id}>\n                    <input\n                        type=\"text\"\n                        value={todo.title}\n                        className=\"list\"\n                        onChange={(event) => event.preventDefault()} />\n\n                        <div>\n                            <button className = \"button-complete task-button\" onClick={()=> handleComplete(todo)}>\n                                <i className='fa fa-check-circle'></i>\n                            </button>\n                            <button className='button-edit task-button'onClick={() => handleEdit(todo)} >\n                                <i className='fa fa-edit'></i>\n                            </button>\n                            <button className='button-delete task-button'onClick={()=> handleDelete(todo)} >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                </li>\n            ))}\n        </div>\n    )\n}\n\nexport default TodoListItem; ","/home/gaurav/web_dev/TodoList/src/componant/Header.js",[],[],"/home/gaurav/web_dev/TodoList/src/componant/Form.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":11,"column":29,"nodeType":"31","messageId":"32","endLine":11,"endColumn":31},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]